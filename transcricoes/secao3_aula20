Eu sei que para algumas pessoas esse foi basicamente seu primeiro código assembly certo.
Quando você escreveu o código, você disse: você montou isso e abriu o depurador stella e viu
tipo, todas as posições de memória diminuem de ff até 00 esvaziando valores dos bancos.
Mas e se eu lhe dissesse que você não apenas escreveu seu primeiro código assembly, mas também escreveu o primeiro bug em assembly
então eu sei que algumas pessoas provavelmente já sinalizaram isso.
E antes que voce fique louco de raiva e me escreva um e-mail dizendo o quão ruim eu sou, eu sei, certo.
Eu sei que temos um bug aqui.
Então, para todos os outros que não perceberam isso, quero que reservemos um momento.
Quero que analisemos o que está acontecendo e por que nosso programa pode ter um bug.

Lembre-se do objetivo do nosso programa. Nós queriamos ir da posição e nós queriamos que ficasse vazio da posição 00 até a FF, 
mas o problema é: Voce pode ver nesse instante que estamos olhando. Isto não é a visão inteira de 00 até FF.
Se voce olhar mais de perto na parte de cima do canto esquerdo, voce verá que ele inicia a visualização que nos temos de 80 até FF
Então é quase como se tivéssemos toda essa outra metade da memória de 00 a 80 que não estamos visualizando aqui, e com isso em mente 
quero que voce volte para o seu código e por alguns segundos ou minutos, tente ver se voce pode identificar, eu entendo o loop, entendo o que estamos fazendo
e talvez qual é o problema e o que não estamos fazendo corretamente com nosso codigo.
Eu darei alguns segundos para ver se voce identifica o ponto de erro e eu provavelmente volta em 3 ou 4 segundos. Então você descobriu 
o que está acontecendo em nosso código e por que ele pode estar com defeito.
Apenas para ilustrar o que estávamos fazendo, quero dar um exemplo rápido aqui.
Deixe-me vir aqui rapidamente e quero definir algumas posições de memória também, de forma aleatória.
No stella na posição ff = aa, na posição fe = aa, eu coloquei em várias posições aqui. Estou apenas configurando alguns bits aleatórios.
Então, se eu entrar aqui e forçar o program counter a começar nessa primeira linha do programa no stella debuger, então se iniciar o passo a passo
então voce deveria ver tadas as posições desde ff virando zero, caindo para zero.
Então, se eu subir, começo meu loop assim que repetir, alcance a linha do meu loop aqui, você verá que resetou para zero aqui no ff point
e este tambem, provavelmente vai para zero, 0 tambem, baixando para 0... Então, todas as posições de memória dele estou baixando 
e vazias com zero certo.
Mas vamos ver rapidamente, Eu fui lá porque eles estão se tornando zero. Vou trapacear um pouco. Quero que você vá ver nosso registrador X lá em cima 
que é aquele que faz contagem regressiva de FF até 0. Eu quero trapacear, quero fingir.
Vamos fingir por um momento que nós percorremos todas as posições de memória até vamos dizer Register X = 08, vamos dizer que nos temos apenas de 8 até 0.
Então vamos fingir que tudo foi escaneado já que estamos lá. E eu passo para o próximo passo e decrementa e vai para 7, então
o programa verifica BNE (Branch not equal zero) e vou armazenar 0 na posição 7 e decrementa para 6 e o loop salva 0 na posição 6, salva 0 na posição 5 e assim
por diante.
Agora salva zero na posição 1 e decrementa o X, zero flag é setado e agora na proxima iteração saimos do loop.
Veja que saimos do loop, sem limpar a posição 00 da memoria. Então, aqui está o nosso bug.
